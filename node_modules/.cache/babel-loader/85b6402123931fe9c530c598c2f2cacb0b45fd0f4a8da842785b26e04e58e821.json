{"ast":null,"code":"var _jsxFileName = \"/Users/bluespacelabs/Documents/projects/bsl/GomoFE/src/components/layouts/AuthLayout.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { IoWifi, IoCellular, IoBatteryFull, IoBatteryHalf, IoBatteryDead } from 'react-icons/io5';\n\n// Mobile Status Bar Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MobileStatusBar = () => {\n  _s();\n  const [currentTime, setCurrentTime] = React.useState(new Date());\n  const [isMobile, setIsMobile] = React.useState(false);\n  const [batteryLevel, setBatteryLevel] = React.useState(100);\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n  const [connectionType, setConnectionType] = React.useState('unknown');\n  const [hasWifi, setHasWifi] = React.useState(true);\n  const [hasCellular, setHasCellular] = React.useState(false);\n  const [cellularCount, setCellularCount] = React.useState(1); // Number of cellular connections\n\n  React.useEffect(() => {\n    // Check if device is mobile\n    const checkMobile = () => {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\n      setIsMobile(isMobileDevice);\n    };\n    checkMobile();\n\n    // Time update timer\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Battery API (if available)\n    const getBatteryLevel = async () => {\n      if ('getBattery' in navigator) {\n        try {\n          const battery = await navigator.getBattery();\n          setBatteryLevel(Math.round(battery.level * 100));\n          battery.addEventListener('levelchange', () => {\n            setBatteryLevel(Math.round(battery.level * 100));\n          });\n        } catch (error) {\n          console.log('Battery API not supported');\n        }\n      }\n    };\n\n    // Network status and connection type detection\n    const detectConnectionType = () => {\n      try {\n        console.log('Starting network detection...');\n\n        // Check if WiFi is available\n        if ('connection' in navigator) {\n          const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n          console.log('Connection object:', connection);\n          if (connection) {\n            const connType = connection.effectiveType || connection.type || 'unknown';\n            setConnectionType(connType);\n            console.log('Connection details:', {\n              type: connection.type,\n              effectiveType: connection.effectiveType,\n              connType: connType,\n              downlink: connection.downlink,\n              rtt: connection.rtt\n            });\n\n            // Determine WiFi availability\n            if (connection.type === 'wifi' || connection.effectiveType === 'wifi') {\n              setHasWifi(true);\n              console.log('WiFi detected');\n            } else {\n              // For now, assume WiFi is available if we're on a desktop-like connection\n              const isLikelyWiFi = !connection.type || connection.type === 'unknown' || connection.effectiveType === '4g' || connection.effectiveType === '3g' || connection.downlink > 10; // High speed likely means WiFi\n\n              if (isLikelyWiFi) {\n                setHasWifi(true);\n                console.log('Likely WiFi connection detected');\n              } else {\n                setHasWifi(false);\n                console.log('No WiFi detected');\n              }\n            }\n\n            // Determine cellular connections based on SIM count\n            // This simulates the number of SIM cards in the device\n            let cellularConnections = 1; // Default to 1 SIM\n\n            // SIM detection based on device characteristics\n            // \n            // PRODUCTION IMPLEMENTATION NOTES:\n            // ================================\n            // In production, replace this simulation with real SIM detection:\n            // \n            // 1. Web APIs (Limited but available):\n            //    - navigator.connection.effectiveType\n            //    - navigator.connection.downlink\n            //    - navigator.connection.rtt\n            // \n            // 2. Native App Integration (Recommended):\n            //    - React Native: @react-native-community/netinfo\n            //    - Cordova/PhoneGap: cordova-plugin-sim\n            //    - Capacitor: @capacitor/network\n            // \n            // 3. Server-Side Detection:\n            //    - User-Agent analysis\n            //    - IP geolocation\n            //    - Device fingerprinting\n            // \n            // 4. Hybrid Approach:\n            //    - WebView bridge to native code\n            //    - Custom native modules\n            // \n            if (isMobile) {\n              // For mobile devices, detect SIM count based on device type\n              // This is a simplified simulation - in production you'd use:\n              // - navigator.connection for network info\n              // - Device-specific APIs for SIM detection\n              // - User agent analysis for device capabilities\n\n              // Simulate realistic SIM distribution\n              const deviceType = navigator.userAgent.toLowerCase();\n              let simCount = 1; // Default to single SIM\n\n              // Android devices more likely to have dual SIM\n              if (deviceType.includes('android')) {\n                simCount = Math.random() > 0.3 ? 2 : 1; // 70% chance of dual SIM\n              }\n              // iPhone typically single SIM (except some models)\n              else if (deviceType.includes('iphone')) {\n                simCount = Math.random() > 0.9 ? 2 : 1; // 10% chance of dual SIM\n              }\n              // Other mobile devices\n              else {\n                simCount = Math.random() > 0.5 ? 2 : 1; // 50% chance of dual SIM\n              }\n              cellularConnections = simCount;\n            } else {\n              // Desktop - no cellular connection\n              cellularConnections = 0;\n            }\n            setCellularCount(cellularConnections);\n            setHasCellular(cellularConnections > 0);\n            console.log(`SIM cards detected: ${cellularConnections}`);\n          } else {\n            // No connection info - assume WiFi available, cellular based on device\n            setHasWifi(true);\n            const simCount = isMobile ? 1 : 0;\n            setHasCellular(simCount > 0);\n            setCellularCount(simCount);\n            console.log(`No connection info - assuming WiFi + ${simCount} SIM(s)`);\n          }\n        } else {\n          // No connection API - assume WiFi available, cellular based on device\n          setHasWifi(true);\n          const simCount = isMobile ? 1 : 0;\n          setHasCellular(simCount > 0);\n          setCellularCount(simCount);\n          console.log(`No connection API - assuming WiFi + ${simCount} SIM(s)`);\n        }\n      } catch (error) {\n        // Fallback in case of any errors\n        console.warn('Network detection error:', error);\n        setHasWifi(true);\n        const simCount = isMobile ? 1 : 0;\n        setHasCellular(simCount > 0);\n        setCellularCount(simCount);\n      }\n    };\n    const handleOnline = () => {\n      setIsOnline(true);\n      detectConnectionType();\n    };\n    const handleOffline = () => {\n      setIsOnline(false);\n      setHasWifi(false);\n      setHasCellular(false);\n      setCellularCount(0);\n    };\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Initial connection detection\n    detectConnectionType();\n    getBatteryLevel();\n\n    // Handle window resize for responsive detection\n    const handleResize = () => {\n      detectConnectionType();\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      clearInterval(timer);\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  const formatTime = date => {\n    return date.toLocaleTimeString('en-US', {\n      hour: '2-digit',\n      minute: '2-digit',\n      hour12: false\n    });\n  };\n  const formatDate = date => {\n    return date.toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n  const getBatteryIcon = () => {\n    if (batteryLevel > 75) return /*#__PURE__*/_jsxDEV(IoBatteryFull, {\n      size: 16,\n      className: \"text-white sm:w-5 sm:h-5\",\n      style: {\n        color: '#ffffff'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 35\n    }, this);\n    if (batteryLevel > 25) return /*#__PURE__*/_jsxDEV(IoBatteryHalf, {\n      size: 16,\n      className: \"text-white sm:w-5 sm:h-5\",\n      style: {\n        color: '#ffffff'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 35\n    }, this);\n    return /*#__PURE__*/_jsxDEV(IoBatteryDead, {\n      size: 16,\n      className: \"text-white sm:w-5 sm:h-5\",\n      style: {\n        color: '#ffffff'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 12\n    }, this);\n  };\n  const getWifiIcon = () => {\n    if (!hasWifi) return null;\n    return /*#__PURE__*/_jsxDEV(IoWifi, {\n      size: 16,\n      className: isOnline ? \"text-white\" : \"text-gray-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 12\n    }, this);\n  };\n  const getCellularIcon = () => {\n    if (!hasCellular) return null;\n    return /*#__PURE__*/_jsxDEV(IoCellular, {\n      size: 16,\n      className: isOnline ? \"text-white\" : \"text-gray-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  };\n  const getNetworkIcons = () => {\n    const icons = [];\n\n    // Add WiFi icon if available\n    if (hasWifi) {\n      icons.push(/*#__PURE__*/_jsxDEV(IoWifi, {\n        size: 16,\n        className: \"text-white sm:w-5 sm:h-5\",\n        style: {\n          color: '#ffffff'\n        }\n      }, \"wifi\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this));\n    }\n\n    // Add multiple cellular icons based on connection count\n    if (hasCellular) {\n      for (let i = 0; i < cellularCount; i++) {\n        icons.push(/*#__PURE__*/_jsxDEV(IoCellular, {\n          size: 16,\n          className: \"text-white sm:w-5 sm:h-5\",\n          style: {\n            color: '#ffffff'\n          }\n        }, `cellular-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return icons;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-between px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-white text-xs sm:text-sm w-full\",\n    style: {\n      borderRadius: '24px 24px 0 0',\n      minHeight: '40px',\n      backgroundColor: '#2C1D44',\n      position: 'relative',\n      zIndex: 10\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-1 sm:space-x-2\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-semibold\",\n        children: formatTime(currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-0.5 sm:space-x-1\",\n      children: [getNetworkIcons(), getBatteryIcon()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n};\n\n// Reusable Header\n_s(MobileStatusBar, \"azaOngC++tyyQbNo6jz8PZ0ZJ5o=\");\n_c = MobileStatusBar;\nconst Header = ({\n  currentStep,\n  totalSteps,\n  title,\n  onBack\n}) => {\n  const steps = Array.from({\n    length: totalSteps\n  }, (_, i) => i + 1);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"w-full px-3 sm:px-4 md:px-6 py-4 sm:py-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex w-full items-center justify-center mb-4 sm:mb-6\",\n      children: steps.map((step, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-2.5 h-2.5 sm:w-3 sm:h-3 rounded-full ${step <= currentStep ? '' : ''}`,\n          style: step <= currentStep ? {\n            backgroundColor: '#D20E56'\n          } : {\n            backgroundColor: '#402E5C'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), index < steps.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-6 sm:w-8 h-0.5 ${step < currentStep ? '' : ''}`,\n          style: step < currentStep ? {\n            backgroundColor: '#D20E56'\n          } : {\n            backgroundColor: '#402E5C'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 15\n        }, this)]\n      }, step, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onBack,\n        className: \"disabled:opacity-50\",\n        disabled: !onBack,\n        style: {\n          color: '#D20E56'\n        },\n        children: /*#__PURE__*/_jsxDEV(IoIosArrowBack, {\n          size: 20,\n          className: \"sm:w-6 sm:h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-white text-lg sm:text-xl\",\n          style: {\n            fontFamily: 'Proxima Nova',\n            fontWeight: 700,\n            fontStyle: 'normal',\n            fontSize: '18px'\n          },\n          children: [currentStep, \" \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-5 sm:w-6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n\n// The Main Layout Component\n_c2 = Header;\nconst AuthLayout = ({\n  children,\n  currentStep,\n  totalSteps,\n  title,\n  onBack\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen w-full justify-center items-center p-1 sm:p-2 md:p-4 lg:p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col bg-[#2C1D44] shadow-2xl w-full max-w-sm h-screen max-h-screen overflow-hidden\",\n      style: {\n        borderRadius: '24px',\n        minHeight: '100vh',\n        maxHeight: '100vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(MobileStatusBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        currentStep: currentStep,\n        totalSteps: totalSteps,\n        title: title,\n        onBack: onBack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"flex w-full flex-1 flex-col justify-between p-3 sm:p-4 md:p-6 lg:p-8\",\n        style: {\n          paddingBottom: '8rem'\n        },\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 5\n  }, this);\n};\n_c3 = AuthLayout;\nexport default AuthLayout;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MobileStatusBar\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"AuthLayout\");","map":{"version":3,"names":["React","IoIosArrowBack","IoWifi","IoCellular","IoBatteryFull","IoBatteryHalf","IoBatteryDead","jsxDEV","_jsxDEV","MobileStatusBar","_s","currentTime","setCurrentTime","useState","Date","isMobile","setIsMobile","batteryLevel","setBatteryLevel","isOnline","setIsOnline","navigator","onLine","connectionType","setConnectionType","hasWifi","setHasWifi","hasCellular","setHasCellular","cellularCount","setCellularCount","useEffect","checkMobile","userAgent","vendor","window","opera","isMobileDevice","test","timer","setInterval","getBatteryLevel","battery","getBattery","Math","round","level","addEventListener","error","console","log","detectConnectionType","connection","mozConnection","webkitConnection","connType","effectiveType","type","downlink","rtt","isLikelyWiFi","cellularConnections","deviceType","toLowerCase","simCount","includes","random","warn","handleOnline","handleOffline","handleResize","clearInterval","removeEventListener","formatTime","date","toLocaleTimeString","hour","minute","hour12","formatDate","toLocaleDateString","month","day","getBatteryIcon","size","className","style","color","fileName","_jsxFileName","lineNumber","columnNumber","getWifiIcon","getCellularIcon","getNetworkIcons","icons","push","i","borderRadius","minHeight","backgroundColor","position","zIndex","children","_c","Header","currentStep","totalSteps","title","onBack","steps","Array","from","length","_","map","step","index","Fragment","onClick","disabled","fontFamily","fontWeight","fontStyle","fontSize","_c2","AuthLayout","maxHeight","paddingBottom","_c3","$RefreshReg$"],"sources":["/Users/bluespacelabs/Documents/projects/bsl/GomoFE/src/components/layouts/AuthLayout.jsx"],"sourcesContent":["import React from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { \n  IoWifi, \n  IoCellular, \n  IoBatteryFull, \n  IoBatteryHalf, \n  IoBatteryDead \n} from 'react-icons/io5';\n\n// Mobile Status Bar Component\nconst MobileStatusBar = () => {\n  const [currentTime, setCurrentTime] = React.useState(new Date());\n  const [isMobile, setIsMobile] = React.useState(false);\n  const [batteryLevel, setBatteryLevel] = React.useState(100);\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n  const [connectionType, setConnectionType] = React.useState('unknown');\n  const [hasWifi, setHasWifi] = React.useState(true);\n  const [hasCellular, setHasCellular] = React.useState(false);\n  const [cellularCount, setCellularCount] = React.useState(1); // Number of cellular connections\n\n  React.useEffect(() => {\n    // Check if device is mobile\n    const checkMobile = () => {\n      const userAgent = navigator.userAgent || navigator.vendor || window.opera;\n      const isMobileDevice = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\n      setIsMobile(isMobileDevice);\n    };\n\n    checkMobile();\n\n    // Time update timer\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 1000);\n\n    // Battery API (if available)\n    const getBatteryLevel = async () => {\n      if ('getBattery' in navigator) {\n        try {\n          const battery = await navigator.getBattery();\n          setBatteryLevel(Math.round(battery.level * 100));\n          \n          battery.addEventListener('levelchange', () => {\n            setBatteryLevel(Math.round(battery.level * 100));\n          });\n        } catch (error) {\n          console.log('Battery API not supported');\n        }\n      }\n    };\n\n    // Network status and connection type detection\n    const detectConnectionType = () => {\n      try {\n        console.log('Starting network detection...');\n        \n        // Check if WiFi is available\n        if ('connection' in navigator) {\n          const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n          console.log('Connection object:', connection);\n          \n          if (connection) {\n            const connType = connection.effectiveType || connection.type || 'unknown';\n            setConnectionType(connType);\n            \n            console.log('Connection details:', {\n              type: connection.type,\n              effectiveType: connection.effectiveType,\n              connType: connType,\n              downlink: connection.downlink,\n              rtt: connection.rtt\n            });\n            \n            // Determine WiFi availability\n            if (connection.type === 'wifi' || connection.effectiveType === 'wifi') {\n              setHasWifi(true);\n              console.log('WiFi detected');\n            } else {\n              // For now, assume WiFi is available if we're on a desktop-like connection\n              const isLikelyWiFi = !connection.type || \n                                   connection.type === 'unknown' || \n                                   connection.effectiveType === '4g' || \n                                   connection.effectiveType === '3g' ||\n                                   connection.downlink > 10; // High speed likely means WiFi\n              \n              if (isLikelyWiFi) {\n                setHasWifi(true);\n                console.log('Likely WiFi connection detected');\n              } else {\n                setHasWifi(false);\n                console.log('No WiFi detected');\n              }\n            }\n            \n            // Determine cellular connections based on SIM count\n            // This simulates the number of SIM cards in the device\n            let cellularConnections = 1; // Default to 1 SIM\n            \n            // SIM detection based on device characteristics\n            // \n            // PRODUCTION IMPLEMENTATION NOTES:\n            // ================================\n            // In production, replace this simulation with real SIM detection:\n            // \n            // 1. Web APIs (Limited but available):\n            //    - navigator.connection.effectiveType\n            //    - navigator.connection.downlink\n            //    - navigator.connection.rtt\n            // \n            // 2. Native App Integration (Recommended):\n            //    - React Native: @react-native-community/netinfo\n            //    - Cordova/PhoneGap: cordova-plugin-sim\n            //    - Capacitor: @capacitor/network\n            // \n            // 3. Server-Side Detection:\n            //    - User-Agent analysis\n            //    - IP geolocation\n            //    - Device fingerprinting\n            // \n            // 4. Hybrid Approach:\n            //    - WebView bridge to native code\n            //    - Custom native modules\n            // \n            if (isMobile) {\n              // For mobile devices, detect SIM count based on device type\n              // This is a simplified simulation - in production you'd use:\n              // - navigator.connection for network info\n              // - Device-specific APIs for SIM detection\n              // - User agent analysis for device capabilities\n              \n              // Simulate realistic SIM distribution\n              const deviceType = navigator.userAgent.toLowerCase();\n              let simCount = 1; // Default to single SIM\n              \n              // Android devices more likely to have dual SIM\n              if (deviceType.includes('android')) {\n                simCount = Math.random() > 0.3 ? 2 : 1; // 70% chance of dual SIM\n              }\n              // iPhone typically single SIM (except some models)\n              else if (deviceType.includes('iphone')) {\n                simCount = Math.random() > 0.9 ? 2 : 1; // 10% chance of dual SIM\n              }\n              // Other mobile devices\n              else {\n                simCount = Math.random() > 0.5 ? 2 : 1; // 50% chance of dual SIM\n              }\n              \n              cellularConnections = simCount;\n            } else {\n              // Desktop - no cellular connection\n              cellularConnections = 0;\n            }\n            \n            setCellularCount(cellularConnections);\n            setHasCellular(cellularConnections > 0);\n            \n            console.log(`SIM cards detected: ${cellularConnections}`);\n            \n          } else {\n            // No connection info - assume WiFi available, cellular based on device\n            setHasWifi(true);\n            const simCount = isMobile ? 1 : 0;\n            setHasCellular(simCount > 0);\n            setCellularCount(simCount);\n            console.log(`No connection info - assuming WiFi + ${simCount} SIM(s)`);\n          }\n        } else {\n          // No connection API - assume WiFi available, cellular based on device\n          setHasWifi(true);\n          const simCount = isMobile ? 1 : 0;\n          setHasCellular(simCount > 0);\n          setCellularCount(simCount);\n          console.log(`No connection API - assuming WiFi + ${simCount} SIM(s)`);\n        }\n      } catch (error) {\n        // Fallback in case of any errors\n        console.warn('Network detection error:', error);\n        setHasWifi(true);\n        const simCount = isMobile ? 1 : 0;\n        setHasCellular(simCount > 0);\n        setCellularCount(simCount);\n      }\n    };\n\n    const handleOnline = () => {\n      setIsOnline(true);\n      detectConnectionType();\n    };\n    \n    const handleOffline = () => {\n      setIsOnline(false);\n      setHasWifi(false);\n      setHasCellular(false);\n      setCellularCount(0);\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    \n    // Initial connection detection\n    detectConnectionType();\n\n    getBatteryLevel();\n\n            // Handle window resize for responsive detection\n            const handleResize = () => {\n              detectConnectionType();\n            };\n\n            window.addEventListener('resize', handleResize);\n\n            return () => {\n              clearInterval(timer);\n              window.removeEventListener('online', handleOnline);\n              window.removeEventListener('offline', handleOffline);\n              window.removeEventListener('resize', handleResize);\n            };\n  }, []);\n\n  const formatTime = (date) => {\n    return date.toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit',\n      hour12: false \n    });\n  };\n\n  const formatDate = (date) => {\n    return date.toLocaleDateString('en-US', { \n      month: 'short', \n      day: 'numeric' \n    });\n  };\n\n  const getBatteryIcon = () => {\n    if (batteryLevel > 75) return <IoBatteryFull size={16} className=\"text-white sm:w-5 sm:h-5\" style={{ color: '#ffffff' }} />;\n    if (batteryLevel > 25) return <IoBatteryHalf size={16} className=\"text-white sm:w-5 sm:h-5\" style={{ color: '#ffffff' }} />;\n    return <IoBatteryDead size={16} className=\"text-white sm:w-5 sm:h-5\" style={{ color: '#ffffff' }} />;\n  };\n\n  const getWifiIcon = () => {\n    if (!hasWifi) return null;\n    return <IoWifi size={16} className={isOnline ? \"text-white\" : \"text-gray-500\"} />;\n  };\n\n  const getCellularIcon = () => {\n    if (!hasCellular) return null;\n    return <IoCellular size={16} className={isOnline ? \"text-white\" : \"text-gray-500\"} />;\n  };\n\n  const getNetworkIcons = () => {\n    const icons = [];\n    \n    // Add WiFi icon if available\n    if (hasWifi) {\n      icons.push(\n        <IoWifi \n          key=\"wifi\" \n          size={16} \n          className=\"text-white sm:w-5 sm:h-5\" \n          style={{ color: '#ffffff' }}\n        />\n      );\n    }\n    \n    // Add multiple cellular icons based on connection count\n    if (hasCellular) {\n      for (let i = 0; i < cellularCount; i++) {\n        icons.push(\n          <IoCellular \n            key={`cellular-${i}`} \n            size={16} \n            className=\"text-white sm:w-5 sm:h-5\" \n            style={{ color: '#ffffff' }}\n          />\n        );\n      }\n    }\n    \n    return icons;\n  };\n\n  return (\n    <div \n      className=\"flex items-center justify-between px-3 sm:px-4 md:px-6 py-2 sm:py-3 text-white text-xs sm:text-sm w-full\"\n      style={{ \n        borderRadius: '24px 24px 0 0',\n        minHeight: '40px',\n        backgroundColor: '#2C1D44',\n        position: 'relative',\n        zIndex: 10\n      }}\n    >\n      {/* Left side - Time only */}\n      <div className=\"flex items-center space-x-1 sm:space-x-2\">\n        <span className=\"font-semibold\">{formatTime(currentTime)}</span>\n      </div>\n      \n      {/* Right side - Status indicators */}\n      <div className=\"flex items-center space-x-0.5 sm:space-x-1\">\n        {/* Network Icons - Shows WiFi and/or Cellular based on availability */}\n        {getNetworkIcons()}\n        \n        {/* Battery */}\n        {getBatteryIcon()}\n      </div>\n    </div>\n  );\n};\n\n// Reusable Header\nconst Header = ({ currentStep, totalSteps, title, onBack }) => {\n  const steps = Array.from({ length: totalSteps }, (_, i) => i + 1);\n\n  return (\n    <header className=\"w-full px-3 sm:px-4 md:px-6 py-4 sm:py-6\">\n      {/* Progress Indicators */}\n      <div className=\"flex w-full items-center justify-center mb-4 sm:mb-6\">\n        {steps.map((step, index) => (\n          <React.Fragment key={step}>\n            <div\n              className={`w-2.5 h-2.5 sm:w-3 sm:h-3 rounded-full ${\n                step <= currentStep ? '' : ''\n              }`}\n              style={step <= currentStep ? { backgroundColor: '#D20E56' } : { backgroundColor: '#402E5C' }}\n            />\n            {index < steps.length - 1 && (\n              <div\n                className={`w-6 sm:w-8 h-0.5 ${\n                  step < currentStep ? '' : ''\n                }`}\n                style={step < currentStep ? { backgroundColor: '#D20E56' } : { backgroundColor: '#402E5C' }}\n              />\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n      \n      {/* Header with Back Button and Title */}\n      <div className=\"relative flex items-center justify-between\">\n        <button onClick={onBack} className=\"disabled:opacity-50\" disabled={!onBack} style={{ color: '#D20E56' }}>\n          <IoIosArrowBack size={20} className=\"sm:w-6 sm:h-6\" />\n        </button>\n        <div className=\"absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2 text-center\">\n          <h1 \n            className=\"text-white text-lg sm:text-xl\"\n            style={{\n              fontFamily: 'Proxima Nova',\n              fontWeight: 700,\n              fontStyle: 'normal',\n              fontSize: '18px'\n            }}\n          >\n            {currentStep} {title}\n          </h1>\n        </div>\n        <div className=\"w-5 sm:w-6\"></div> {/* Spacer for centering */}\n      </div>\n    </header>\n  );\n};\n\n\n// The Main Layout Component\nconst AuthLayout = ({ children, currentStep, totalSteps, title, onBack }) => {\n  return (\n    <div className=\"flex min-h-screen w-full justify-center items-center p-1 sm:p-2 md:p-4 lg:p-6\">\n      <div \n        className=\"flex flex-col bg-[#2C1D44] shadow-2xl w-full max-w-sm h-screen max-h-screen overflow-hidden\" \n        style={{ \n          borderRadius: '24px',\n          minHeight: '100vh',\n          maxHeight: '100vh'\n        }}\n      >\n        {/* Mobile Status Bar */}\n        <MobileStatusBar />\n        \n        <Header\n          currentStep={currentStep}\n          totalSteps={totalSteps}\n          title={title}\n          onBack={onBack}\n        />\n        {/* This is where the different page content will be rendered */}\n        <main className=\"flex w-full flex-1 flex-col justify-between p-3 sm:p-4 md:p-6 lg:p-8\" style={{ paddingBottom: '8rem' }}>\n          {children}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default AuthLayout;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}