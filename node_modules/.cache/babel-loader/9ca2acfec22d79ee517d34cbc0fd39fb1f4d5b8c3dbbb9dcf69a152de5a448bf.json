{"ast":null,"code":"var _jsxFileName = \"/Users/bluespacelabs/Documents/projects/bsl/GomoFE/src/components/steps/DocumentCamera.jsx\",\n  _s = $RefreshSig$();\nimport \"@innovatrics/dot-document-auto-capture\";\nimport { useEffect } from \"react\";\n\n/*\n * When component is initialized, sam.wasm file will be fetched from http://localhost:5800/sam.wasm.\n * That's why sam.wasm file need to be placed in root of public folder.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DocumentCamera(props) {\n  _s();\n  useEffect(() => {\n    // Wait for custom element to be defined\n    const initCamera = () => {\n      const documentAutoCaptureHTMLElement = document.getElementById(\"x-dot-document-auto-capture\");\n      if (documentAutoCaptureHTMLElement) {\n        documentAutoCaptureHTMLElement.cameraOptions = props;\n        // Trigger camera initialization\n        if (typeof documentAutoCaptureHTMLElement.startCamera === 'function') {\n          documentAutoCaptureHTMLElement.startCamera();\n        }\n      }\n    };\n\n    // Try immediately and also after a short delay\n    initCamera();\n    const timeoutId = setTimeout(initCamera, 1000);\n    return () => clearTimeout(timeoutId);\n  }, [props]);\n\n  // 1. Return empty custom web-component html TAG\n  return /*#__PURE__*/_jsxDEV(\"x-dot-document-auto-capture\", {\n    id: \"x-dot-document-auto-capture\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n_s(DocumentCamera, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DocumentCamera;\nexport default DocumentCamera;\nvar _c;\n$RefreshReg$(_c, \"DocumentCamera\");","map":{"version":3,"names":["useEffect","jsxDEV","_jsxDEV","DocumentCamera","props","_s","initCamera","documentAutoCaptureHTMLElement","document","getElementById","cameraOptions","startCamera","timeoutId","setTimeout","clearTimeout","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/bluespacelabs/Documents/projects/bsl/GomoFE/src/components/steps/DocumentCamera.jsx"],"sourcesContent":["import \"@innovatrics/dot-document-auto-capture\";\nimport { useEffect } from \"react\";\n\n/*\n * When component is initialized, sam.wasm file will be fetched from http://localhost:5800/sam.wasm.\n * That's why sam.wasm file need to be placed in root of public folder.\n */\n\nfunction DocumentCamera(props) {\n  useEffect(() => {\n    // Wait for custom element to be defined\n    const initCamera = () => {\n      const documentAutoCaptureHTMLElement = document.getElementById(\n        \"x-dot-document-auto-capture\",\n      );\n\n      if (documentAutoCaptureHTMLElement) {\n        documentAutoCaptureHTMLElement.cameraOptions = props;\n        // Trigger camera initialization\n        if (typeof documentAutoCaptureHTMLElement.startCamera === 'function') {\n          documentAutoCaptureHTMLElement.startCamera();\n        }\n      }\n    };\n\n    // Try immediately and also after a short delay\n    initCamera();\n    const timeoutId = setTimeout(initCamera, 1000);\n\n    return () => clearTimeout(timeoutId);\n  }, [props]);\n  \n  // 1. Return empty custom web-component html TAG\n  return <x-dot-document-auto-capture id=\"x-dot-document-auto-capture\" />;\n}\n\nexport default DocumentCamera;\n"],"mappings":";;AAAA,OAAO,wCAAwC;AAC/C,SAASA,SAAS,QAAQ,OAAO;;AAEjC;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAKA,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7BL,SAAS,CAAC,MAAM;IACd;IACA,MAAMM,UAAU,GAAGA,CAAA,KAAM;MACvB,MAAMC,8BAA8B,GAAGC,QAAQ,CAACC,cAAc,CAC5D,6BACF,CAAC;MAED,IAAIF,8BAA8B,EAAE;QAClCA,8BAA8B,CAACG,aAAa,GAAGN,KAAK;QACpD;QACA,IAAI,OAAOG,8BAA8B,CAACI,WAAW,KAAK,UAAU,EAAE;UACpEJ,8BAA8B,CAACI,WAAW,CAAC,CAAC;QAC9C;MACF;IACF,CAAC;;IAED;IACAL,UAAU,CAAC,CAAC;IACZ,MAAMM,SAAS,GAAGC,UAAU,CAACP,UAAU,EAAE,IAAI,CAAC;IAE9C,OAAO,MAAMQ,YAAY,CAACF,SAAS,CAAC;EACtC,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;;EAEX;EACA,oBAAOF,OAAA;IAA6Ba,EAAE,EAAC;EAA6B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzE;AAACd,EAAA,CA1BQF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AA4BvB,eAAeA,cAAc;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}