import type { AppStateInstruction, CustomizationContextProps, HTMLElementWithProps, UiProps } from './common';
import type { CustomElement, DeepRequired, MagnifEyeInstructionCode } from '../../../ui-common/src/types';
export * from './common';
declare global {
    namespace preact.JSX {
        interface IntrinsicElements {
            'x-dot-magnifeye-liveness-ui': CustomElement<{
                props: MagnifEyeLivenessUiProps;
            }>;
        }
    }
    namespace React.JSX {
        interface IntrinsicElements {
            'x-dot-magnifeye-liveness-ui': CustomElement<{
                props: MagnifEyeLivenessUiProps;
            }>;
        }
    }
}
export type MagnifEyeInstructions = Record<MagnifEyeInstructionCode, string>;
export type CustomizableMagnifEyeInstructions = Omit<MagnifEyeInstructions, 'mouth_score_too_high' | 'mouth_score_too_low'>;
export type MagnifEyeLivenessUiProps<I = CustomizableMagnifEyeInstructions, SI = MagnifEyeStateInstructions> = UiProps<I, SI>;
type RequiredUiProps = DeepRequired<UiProps<MagnifEyeInstructions>>;
export type MagnifEyeProps = CustomizationContextProps<RequiredUiProps>;
export type HTMLMagnifEyeLivenessUiElement = HTMLElementWithProps<MagnifEyeLivenessUiProps>;
export type MagnifEyeStateInstructions = {
    done?: AppStateInstruction;
    loading?: AppStateInstruction;
};
export type UiMagnifEyeStateInstructions = {
    [key: string]: DeepRequired<AppStateInstruction>;
};
